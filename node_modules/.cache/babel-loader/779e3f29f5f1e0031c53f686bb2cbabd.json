{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: 'boston',\n      weather: {},\n      temp: 0,\n      loading: false\n    };\n\n    this.celciusTemp = () => {\n      let temp = this.state.weather.main.temp;\n      console.log(temp);\n    };\n  }\n\n  //getting info from weather api\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`);\n    this.setState({\n      weather: res.data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, this.state.weather.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.state.weather.temp))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js"],"names":["React","Component","Fragment","axios","App","state","city","weather","temp","loading","celciusTemp","main","console","log","componentDidMount","setState","res","get","data","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACPC,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,OAAO,EAAE,EAFF;AAGPC,MAAAA,IAAI,EAAE,CAHC;AAIPC,MAAAA,OAAO,EAAE;AAJF,KADmB;;AAAA,SAiB3BC,WAjB2B,GAiBb,MAAM;AACnB,UAAIF,IAAI,GAAG,KAAKH,KAAL,CAAWE,OAAX,CAAmBI,IAAnB,CAAwBH,IAAnC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,KApB0B;AAAA;;AAQ3B;AACA,QAAMM,iBAAN,GAA0B;AACzB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAChB,gGADgB,CAAlB;AAGA,SAAKF,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAES,GAAG,CAACE;AAAf,KAAd;AACA;;AAODC,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWE,OAAX,CAAmBa,IAAxB,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWE,OAAX,CAAmBC,IAAxB,CAHD,CADD,CADD,CADD;AAWA;;AAlC0B;;AAqC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tstate = {\n\t\tcity: 'boston',\n\t\tweather: {},\n\t\ttemp: 0,\n\t\tloading: false,\n\t};\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tthis.setState({ weather: res.data });\n\t}\n\n\tcelciusTemp = () => {\n\t\tlet temp = this.state.weather.main.temp;\n\t\tconsole.log(temp);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h1>WorldWeather</h1>\n\t\t\t\t\t\t<h2>{this.state.weather.name}</h2>\n\t\t\t\t\t\t<h3>{this.state.weather.temp}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}