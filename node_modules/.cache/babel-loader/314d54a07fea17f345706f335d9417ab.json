{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: 'boston',\n      icon: undefined,\n      description: '',\n      temp: '0',\n      minTemp: '0',\n      maxTemp: '0',\n      wind: '',\n      loading: false\n    };\n  }\n\n  //the temp needs to be in celcuis and the api file is in kelvin, thus the calculation needs to be done\n  calculateCel(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`);\n    this.setState({\n      city: response.name,\n      temp: this.calculateCel(response.main.temp),\n      maxTemp: this.calculateCel(response.main.temp_max),\n      minTemp: this.calculateCel(response.main.temp_min),\n      description: response.weather[0].description\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.state.city), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.temp))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js"],"names":["React","Component","Fragment","axios","App","state","city","icon","undefined","description","temp","minTemp","maxTemp","wind","loading","calculateCel","cel","Math","floor","componentDidMount","setState","response","get","name","main","temp_max","temp_min","weather","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACPC,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,IAAI,EAAEC,SAFC;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,IAAI,EAAE,GAJC;AAKPC,MAAAA,OAAO,EAAE,GALF;AAMPC,MAAAA,OAAO,EAAE,GANF;AAOPC,MAAAA,IAAI,EAAE,EAPC;AASPC,MAAAA,OAAO,EAAE;AATF,KADmB;AAAA;;AAa3B;AACAC,EAAAA,YAAY,CAACL,IAAD,EAAO;AAClB,QAAIM,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,MAAlB,CAAV;AACA,WAAOM,GAAP;AACA,GAjB0B,CAmB3B;;;AACA,QAAMG,iBAAN,GAA0B;AACzB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACrB,gGADqB,CAAvB;AAGA,SAAKF,QAAL,CAAc;AACbd,MAAAA,IAAI,EAAEe,QAAQ,CAACE,IADF;AAEbb,MAAAA,IAAI,EAAE,KAAKK,YAAL,CAAkBM,QAAQ,CAACG,IAAT,CAAcd,IAAhC,CAFO;AAGbE,MAAAA,OAAO,EAAE,KAAKG,YAAL,CAAkBM,QAAQ,CAACG,IAAT,CAAcC,QAAhC,CAHI;AAIbd,MAAAA,OAAO,EAAE,KAAKI,YAAL,CAAkBM,QAAQ,CAACG,IAAT,CAAcE,QAAhC,CAJI;AAKbjB,MAAAA,WAAW,EAAEY,QAAQ,CAACM,OAAT,CAAiB,CAAjB,EAAoBlB;AALpB,KAAd;AAOA;;AAEDmB,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKvB,KAAL,CAAWC,IAAhB,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWK,IAAhB,CAHD,CADD,CADD,CADD;AAWA;;AA9C0B;;AAiD5B,eAAeN,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tstate = {\n\t\tcity: 'boston',\n\t\ticon: undefined,\n\t\tdescription: '',\n\t\ttemp: '0',\n\t\tminTemp: '0',\n\t\tmaxTemp: '0',\n\t\twind: '',\n\n\t\tloading: false,\n\t};\n\n\t//the temp needs to be in celcuis and the api file is in kelvin, thus the calculation needs to be done\n\tcalculateCel(temp) {\n\t\tlet cel = Math.floor(temp - 273.15);\n\t\treturn cel;\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst response = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tthis.setState({\n\t\t\tcity: response.name,\n\t\t\ttemp: this.calculateCel(response.main.temp),\n\t\t\tmaxTemp: this.calculateCel(response.main.temp_max),\n\t\t\tminTemp: this.calculateCel(response.main.temp_min),\n\t\t\tdescription: response.weather[0].description,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h1>WorldWeather</h1>\n\t\t\t\t\t\t<h2>{this.state.city}</h2>\n\t\t\t\t\t\t<h2>{this.state.temp}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}