{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js\";\nimport React, { Component, Fragment } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nclass GetWeather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchUser = async text => {\n      const result = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`).then(res.data);\n      console.log(result);\n      this.weatherDisplay(result);\n    };\n\n    this.weatherDisplay = result => {\n      const {\n        name\n      } = result;\n      const {\n        country\n      } = result.sys;\n      const {\n        lat,\n        lon\n      } = result.coord;\n      const {\n        temp,\n        temp_min,\n        temp_max,\n        feels_like,\n        humidity,\n        pressure\n      } = result.main;\n      const {\n        description,\n        id\n      } = result.weather[0];\n      const {\n        speed,\n        deg\n      } = result.wind;\n      this.setState({\n        weatherData: {\n          name,\n          country,\n          id,\n          description,\n          temp: temp.toFixed(0),\n          feels_like: feels_like.toFixed(0),\n          temp_min: temp_min.toFixed(0),\n          temp_max: temp_max.toFixed(0),\n          speed,\n          deg,\n          humidity,\n          pressure,\n          lat: lat.toFixed(1),\n          lon: lon.toFixed(1),\n          icon: this.getWeatherIcon(id)\n        }\n      });\n      this.getWeatherIcon(id);\n    };\n\n    this.setAlert = msg => {\n      this.setState({\n        alert: {\n          msg\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 2000);\n    };\n\n    this.state = {\n      weatherData: {},\n      loading: false,\n      alert: null\n    };\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Dizzle: 'wi-sleet',\n      Rain: 'wi-storm-showers',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog'\n    };\n  }\n\n  async componentDidMount() {\n    const city = 'Boston';\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`);\n    const result = res.data;\n    console.log(result);\n    this.weatherDisplay(result);\n  }\n\n  getWeatherIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        return 'wi-thunderstorm';\n\n      case rangeId >= 300 && rangeId <= 321:\n        return 'wi-sleet';\n\n      case rangeId >= 500 && rangeId <= 531:\n        return 'wi-storm-showers';\n\n      case rangeId >= 600 && rangeId <= 622:\n        return 'wi-snow';\n\n      case rangeId >= 701 && rangeId <= 781:\n        return 'wi-fog';\n\n      case rangeId === 800:\n        return 'wi-day-sunny';\n\n      case rangeId >= 801 && rangeId <= 804:\n        return 'wi-day-fog';\n\n      default:\n        return 'wi-day-fog';\n    }\n  } //set alert\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(Form, {\n      searchUser: this.searchUser,\n      setAlert: this.setAlert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Alert, {\n      alert: this.state.alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Layout, {\n      weatherData: this.state.weatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nGetWeather.propType = {\n  searchUser: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js"],"names":["React","Component","Fragment","axios","Layout","Form","PropTypes","Alert","GetWeather","constructor","props","searchUser","text","result","get","then","res","data","console","log","weatherDisplay","name","country","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","id","weather","speed","deg","wind","setState","weatherData","toFixed","icon","getWeatherIcon","setAlert","msg","alert","setTimeout","state","loading","weatherIcon","Thunderstorm","Dizzle","Rain","Snow","Atmosphere","Clear","Clouds","componentDidMount","city","rangeId","render","propType","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nclass GetWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tweatherData: {},\n\t\t\tloading: false,\n\t\t\talert: null,\n\t\t};\n\t\tthis.weatherIcon = {\n\t\t\tThunderstorm: 'wi-thunderstorm',\n\t\t\tDizzle: 'wi-sleet',\n\t\t\tRain: 'wi-storm-showers',\n\t\t\tSnow: 'wi-snow',\n\t\t\tAtmosphere: 'wi-fog',\n\t\t\tClear: 'wi-day-sunny',\n\t\t\tClouds: 'wi-day-fog',\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst city = 'Boston';\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tconst result = res.data;\n\t\tconsole.log(result);\n\t\tthis.weatherDisplay(result);\n\t}\n\n\tsearchUser = async (text) => {\n\t\tconst result = await axios\n\t\t\t.get(\n\t\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t\t)\n\t\t\t.then(res.data);\n\n\t\tconsole.log(result);\n\n\t\tthis.weatherDisplay(result);\n\t};\n\n\tweatherDisplay = (result) => {\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tid,\n\t\t\t\tdescription,\n\t\t\t\ttemp: temp.toFixed(0),\n\t\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t\ticon: this.getWeatherIcon(id),\n\t\t\t},\n\t\t});\n\t\tthis.getWeatherIcon(id);\n\t};\n\n\tgetWeatherIcon(rangeId) {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\treturn 'wi-thunderstorm';\n\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\treturn 'wi-sleet';\n\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\treturn 'wi-storm-showers';\n\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\treturn 'wi-snow';\n\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\treturn 'wi-fog';\n\n\t\t\tcase rangeId === 800:\n\t\t\t\treturn 'wi-day-sunny';\n\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\treturn 'wi-day-fog';\n\n\t\t\tdefault:\n\t\t\t\treturn 'wi-day-fog';\n\t\t}\n\t}\n\n\t//set alert\n\tsetAlert = (msg) => {\n\t\tthis.setState({ alert: { msg } });\n\t\tsetTimeout(() => this.setState({ alert: null }), 2000);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<h2>WorldWeather</h2>\n\t\t\t\t\t<Form searchUser={this.searchUser} setAlert={this.setAlert} />\n\t\t\t\t\t<Alert alert={this.state.alert} />\n\t\t\t\t\t<Layout weatherData={this.state.weatherData} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nGetWeather.propType = {\n\tsearchUser: PropTypes.func.isRequired,\n\tsetAlert: PropTypes.func.isRequired,\n};\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}