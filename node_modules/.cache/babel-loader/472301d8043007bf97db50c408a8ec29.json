{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport 'weather-icons/css/weather-icons.css';\n\nclass GetWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Boston',\n      weatherData: {},\n      icon: undefined,\n      loading: false\n    };\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`);\n    const result = res.data;\n    const {\n      name\n    } = result;\n    const {\n      country,\n      sunrise,\n      sunset\n    } = result.sys;\n    const {\n      lat,\n      lon\n    } = result.coord;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity,\n      pressure\n    } = result.main;\n    const {\n      description,\n      icon_id\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    this.setState({\n      weatherData: {\n        name,\n        country,\n        icon_id,\n        sunrise,\n        sunset,\n        description,\n        temp: Math.floor(temp - 273.15).toFixed(0),\n        feels_like: Math.floor(feels_like - 273.15).toFixed(0),\n        temp_min: Math.floor(temp_min - 273.15).toFixed(0),\n        temp_max: Math.floor(temp_max - 273.15).toFixed(0),\n        speed,\n        deg,\n        humidity,\n        pressure,\n        lat: lat.toFixed(1),\n        lon: lon.toFixed(1)\n      }\n    });\n  }\n\n  render() {\n    const {\n      name,\n      country,\n      icon_id,\n      description,\n      temp,\n      feels_like,\n      temp_max,\n      temp_min,\n      sunrise,\n      sunset,\n      speed,\n      deg,\n      humidity,\n      pressure,\n      lat,\n      lon\n    } = this.state.weatherData;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, `${name} , ${country}`), /*#__PURE__*/React.createElement(\"i\", {\n      className: `wi ${icon} display-1`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js"],"names":["React","Component","Fragment","axios","GetWeather","constructor","props","state","city","weatherData","icon","undefined","loading","componentDidMount","setState","res","get","result","data","name","country","sunrise","sunset","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","icon_id","weather","speed","deg","wind","Math","floor","toFixed","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport 'weather-icons/css/weather-icons.css';\n\nclass GetWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcity: 'Boston',\n\t\t\tweatherData: {},\n\t\t\ticon: undefined,\n\t\t\tloading: false,\n\t\t};\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tconst result = res.data;\n\n\t\tconst { name } = result;\n\t\tconst { country, sunrise, sunset } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, icon_id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\ticon_id,\n\t\t\t\tsunrise,\n\t\t\t\tsunset,\n\t\t\t\tdescription,\n\t\t\t\ttemp: Math.floor(temp - 273.15).toFixed(0),\n\t\t\t\tfeels_like: Math.floor(feels_like - 273.15).toFixed(0),\n\t\t\t\ttemp_min: Math.floor(temp_min - 273.15).toFixed(0),\n\t\t\t\ttemp_max: Math.floor(temp_max - 273.15).toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tname,\n\t\t\tcountry,\n\t\t\ticon_id,\n\t\t\tdescription,\n\t\t\ttemp,\n\t\t\tfeels_like,\n\t\t\ttemp_max,\n\t\t\ttemp_min,\n\t\t\tsunrise,\n\t\t\tsunset,\n\t\t\tspeed,\n\t\t\tdeg,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t\tlat,\n\t\t\tlon,\n\t\t} = this.state.weatherData;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h1>WorldWeather</h1>\n\t\t\t\t\t\t<h2>{`${name} , ${country}`}</h2>\n\t\t\t\t\t\t<i className={`wi ${icon} display-1`}></i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}