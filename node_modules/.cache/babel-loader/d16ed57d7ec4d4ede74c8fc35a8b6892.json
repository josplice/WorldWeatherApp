{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass GetWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Boston',\n      weatherData: {},\n      loading: false\n    };\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`);\n    const result = res.data;\n    console.log(result);\n    const {\n      name\n    } = result;\n    const {\n      country,\n      sunrise,\n      sunset\n    } = result.sys;\n    const {\n      lat,\n      lon\n    } = result.coord;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity,\n      pressure\n    } = result.main;\n    const {\n      description,\n      icon,\n      icon_id\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    this.setState({\n      weatherData: {\n        name,\n        country,\n        sunrise,\n        sunset,\n        description,\n        icon,\n        icon_id,\n        temp: temp.toFixed(0),\n        feels_like: feels_like.toFixed(0),\n        temp_min: temp_min.toFixed(0),\n        temp_max: temp_max.toFixed(0),\n        speed,\n        deg,\n        humidity,\n        pressure,\n        lat: lat.toFixed(1),\n        lon: lon.toFixed(1)\n      }\n    });\n  }\n\n  render() {\n    const {\n      name,\n      country,\n      temp\n    } = this.state.weatherData;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, name), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, icon), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, temp))));\n  }\n\n}\n\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js"],"names":["React","Component","Fragment","axios","GetWeather","constructor","props","state","city","weatherData","loading","componentDidMount","setState","res","get","result","data","console","log","name","country","sunrise","sunset","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","icon","icon_id","weather","speed","deg","wind","toFixed","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass GetWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcity: 'Boston',\n\t\t\tweatherData: {},\n\t\t\tloading: false,\n\t\t};\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tconst result = res.data;\n\n\t\tconsole.log(result);\n\t\tconst { name } = result;\n\t\tconst { country, sunrise, sunset } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, icon, icon_id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tsunrise,\n\t\t\t\tsunset,\n\t\t\t\tdescription,\n\t\t\t\ticon,\n\t\t\t\ticon_id,\n\t\t\t\ttemp: temp.toFixed(0),\n\t\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { name, country, temp } = this.state.weatherData;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t\t<i>{icon}</i>\n\t\t\t\t\t\t<h2>{temp}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}