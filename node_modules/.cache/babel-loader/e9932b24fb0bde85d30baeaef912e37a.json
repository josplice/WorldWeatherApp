{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Boston',\n      weather: {},\n      loading: false\n    };\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`);\n    const result = res.data;\n    console.log(result);\n    const {\n      name\n    } = result;\n    const {\n      country\n    } = result.sys;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity\n    } = result.main;\n    const {\n      description,\n      icon\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    this.setState({\n      isLoaded: true,\n      weatherData: {\n        name,\n        country,\n        description,\n        icon,\n        temp: temp.toFixed(1),\n        feels_like: feels_like.toFixed(1),\n        temp_min: temp_min.toFixed(1),\n        temp_max: temp_max.toFixed(1),\n        speed,\n        deg,\n        humidity\n      }\n    });\n  }\n\n  render() {\n    const {\n      name,\n      timezone,\n      main\n    } = this.state.weather;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, timezone), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, main))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js"],"names":["React","Component","Fragment","axios","App","constructor","props","state","city","weather","loading","componentDidMount","setState","res","get","result","data","console","log","name","country","sys","temp","temp_min","temp_max","feels_like","humidity","main","description","icon","speed","deg","wind","isLoaded","weatherData","toFixed","render","timezone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,QADM;AAEZC,MAAAA,OAAO,EAAE,EAFG;AAGZC,MAAAA,OAAO,EAAE;AAHG,KAAb;AAKA,GAR0B,CAU3B;;;AACA,QAAMC,iBAAN,GAA0B;AACzB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMG,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAChB,oDAAmD,KAAKP,KAAL,CAAWC,IAAK,yCADnD,CAAlB;AAGA,UAAMO,MAAM,GAAGF,GAAG,CAACG,IAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAWJ,MAAjB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAcL,MAAM,CAACM,GAA3B;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,QAAlB;AAA4BC,MAAAA,UAA5B;AAAwCC,MAAAA;AAAxC,QAAqDX,MAAM,CAACY,IAAlE;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBd,MAAM,CAACN,OAAP,CAAe,CAAf,CAA9B;AACA,UAAM;AAAEqB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiBhB,MAAM,CAACiB,IAA9B;AAEA,SAAKpB,QAAL,CAAc;AACbqB,MAAAA,QAAQ,EAAE,IADG;AAEbC,MAAAA,WAAW,EAAE;AACZf,QAAAA,IADY;AAEZC,QAAAA,OAFY;AAGZQ,QAAAA,WAHY;AAIZC,QAAAA,IAJY;AAKZP,QAAAA,IAAI,EAAEA,IAAI,CAACa,OAAL,CAAa,CAAb,CALM;AAMZV,QAAAA,UAAU,EAAEA,UAAU,CAACU,OAAX,CAAmB,CAAnB,CANA;AAOZZ,QAAAA,QAAQ,EAAEA,QAAQ,CAACY,OAAT,CAAiB,CAAjB,CAPE;AAQZX,QAAAA,QAAQ,EAAEA,QAAQ,CAACW,OAAT,CAAiB,CAAjB,CARE;AASZL,QAAAA,KATY;AAUZC,QAAAA,GAVY;AAWZL,QAAAA;AAXY;AAFA,KAAd;AAgBA;;AAEDU,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEjB,MAAAA,IAAF;AAAQkB,MAAAA,QAAR;AAAkBV,MAAAA;AAAlB,QAA2B,KAAKpB,KAAL,CAAWE,OAA5C;AACA,wBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKU,IAAL,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,QAAL,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,IAAL,CAJD,CADD,CADD,CADD;AAYA;;AAzD0B;;AA4D5B,eAAevB,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcity: 'Boston',\n\t\t\tweather: {},\n\t\t\tloading: false,\n\t\t};\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tconst result = res.data;\n\n\t\tconsole.log(result);\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { temp, temp_min, temp_max, feels_like, humidity } = result.main;\n\t\tconst { description, icon } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tisLoaded: true,\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tdescription,\n\t\t\t\ticon,\n\t\t\t\ttemp: temp.toFixed(1),\n\t\t\t\tfeels_like: feels_like.toFixed(1),\n\t\t\t\ttemp_min: temp_min.toFixed(1),\n\t\t\t\ttemp_max: temp_max.toFixed(1),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { name, timezone, main } = this.state.weather;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h1>WorldWeather</h1>\n\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t\t<h2>{timezone}</h2>\n\t\t\t\t\t\t<h2>{main}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}