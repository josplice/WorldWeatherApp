{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js\";\nimport React, { Component, Fragment } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\n\nclass GetWeather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: 'Boston',\n      weatherData: [],\n      loading: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: 'wi-thunderstorm',\n      Dizzle: 'wi-sleet',\n      Rain: 'wi-storm-showers',\n      Snow: 'wi-snow',\n      Atmosphere: 'wi-fog',\n      Clear: 'wi-day-sunny',\n      Clouds: 'wi-day-fog'\n    };\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`);\n    const result = res.data;\n    console.log(result);\n    const {\n      name\n    } = result;\n    const {\n      country\n    } = result.sys;\n    const {\n      lat,\n      lon\n    } = result.coord;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity,\n      pressure\n    } = result.main;\n    const {\n      description,\n      id\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    this.setState({\n      weatherData: {\n        name,\n        country,\n        id,\n        description,\n        temp: temp.toFixed(0),\n        feels_like: feels_like.toFixed(0),\n        temp_min: temp_min.toFixed(0),\n        temp_max: temp_max.toFixed(0),\n        speed,\n        deg,\n        humidity,\n        pressure,\n        lat: lat.toFixed(1),\n        lon: lon.toFixed(1),\n        icon: this.getWeatherIcon(id)\n      }\n    });\n    this.getWeatherIcon(id);\n  }\n\n  getWeatherIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        return {\n          icon: 'wi-thunderstorm'\n        };\n\n      case rangeId >= 300 && rangeId <= 321:\n        return {\n          icon: 'wi-sleet'\n        };\n\n      case rangeId >= 500 && rangeId <= 531:\n        return {\n          icon: 'wi-storm-showers'\n        };\n\n      case rangeId >= 600 && rangeId <= 622:\n        return {\n          icon: 'wi-snow'\n        };\n\n      case rangeId >= 701 && rangeId <= 781:\n        return {\n          icon: 'wi-fog'\n        };\n\n      case rangeId === 800:\n        return {\n          icon: 'wi-day-sunny'\n        };\n\n      case rangeId >= 801 && rangeId <= 804:\n        return {\n          icon: 'wi-day-fog'\n        };\n\n      default:\n        return {\n          icon: 'wi-day-fog'\n        };\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      weatherData: this.state.weatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/components/GetWeather.js"],"names":["React","Component","Fragment","axios","Layout","GetWeather","constructor","props","state","city","weatherData","loading","weatherIcon","Thunderstorm","Dizzle","Rain","Snow","Atmosphere","Clear","Clouds","componentDidMount","setState","res","get","result","data","console","log","name","country","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","id","weather","speed","deg","wind","toFixed","icon","getWeatherIcon","rangeId","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\n\nclass GetWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcity: 'Boston',\n\t\t\tweatherData: [],\n\n\t\t\tloading: false,\n\t\t};\n\t\tthis.weatherIcon = {\n\t\t\tThunderstorm: 'wi-thunderstorm',\n\t\t\tDizzle: 'wi-sleet',\n\t\t\tRain: 'wi-storm-showers',\n\t\t\tSnow: 'wi-snow',\n\t\t\tAtmosphere: 'wi-fog',\n\t\t\tClear: 'wi-day-sunny',\n\t\t\tClouds: 'wi-day-fog',\n\t\t};\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tconst result = res.data;\n\t\tconsole.log(result);\n\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tid,\n\t\t\t\tdescription,\n\t\t\t\ttemp: temp.toFixed(0),\n\t\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t\ticon: this.getWeatherIcon(id),\n\t\t\t},\n\t\t});\n\t\tthis.getWeatherIcon(id);\n\t}\n\tgetWeatherIcon(rangeId) {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\treturn { icon: 'wi-thunderstorm' };\n\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\treturn { icon: 'wi-sleet' };\n\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\treturn { icon: 'wi-storm-showers' };\n\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\treturn { icon: 'wi-snow' };\n\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\treturn { icon: 'wi-fog' };\n\n\t\t\tcase rangeId === 800:\n\t\t\t\treturn { icon: 'wi-day-sunny' };\n\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\treturn { icon: 'wi-day-fog' };\n\n\t\t\tdefault:\n\t\t\t\treturn { icon: 'wi-day-fog' };\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<Layout weatherData={this.state.weatherData} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}