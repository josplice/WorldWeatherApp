{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js\";\nimport React, { Fragment, useState } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nconst GetWeather = () => {\n  const [weatherData, setWeatherData] = useState({});\n  const [alert, setAlert] = useState(null); // useEffect(async () => {\n  // \tconst city = 'Boston';\n  // \tconst res = await axios.get(\n  // \t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n  // \t);\n  // \tsetWeatherData(res.data);\n  // \tweatherDisplay(res.data);\n  // \t//eslint-disabled-next-line\n  // }, []);\n\n  const searchUser = async text => {\n    try {\n      const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`);\n      setWeatherData(res.data);\n      weatherDisplay(res.data);\n    } catch (error) {\n      if (error) {\n        setAlert('City not on WorldWeather list');\n      }\n    }\n  };\n\n  const weatherDisplay = result => {\n    const {\n      name\n    } = result;\n    const {\n      country\n    } = result.sys;\n    const {\n      lat,\n      lon\n    } = result.coord;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity,\n      pressure\n    } = result.main;\n    const {\n      description,\n      id\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    setWeatherData({\n      weatherData: {\n        name,\n        country,\n        id,\n        description,\n        temp: temp.toFixed(0),\n        feels_like: feels_like.toFixed(0),\n        temp_min: temp_min.toFixed(0),\n        temp_max: temp_max.toFixed(0),\n        speed,\n        deg,\n        humidity,\n        pressure,\n        lat: lat.toFixed(1),\n        lon: lon.toFixed(1),\n        icon: getWeatherIcon(id)\n      }\n    });\n    getWeatherIcon(id);\n  };\n\n  const getWeatherIcon = rangeId => {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        return 'wi-thunderstorm';\n\n      case rangeId >= 300 && rangeId <= 321:\n        return 'wi-sleet';\n\n      case rangeId >= 500 && rangeId <= 531:\n        return 'wi-storm-showers';\n\n      case rangeId >= 600 && rangeId <= 622:\n        return 'wi-snow';\n\n      case rangeId >= 701 && rangeId <= 781:\n        return 'wi-fog';\n\n      case rangeId === 800:\n        return 'wi-day-sunny';\n\n      case rangeId >= 801 && rangeId <= 804:\n        return 'wi-day-fog';\n\n      default:\n        return 'wi-day-fog';\n    }\n  }; //set alert\n\n\n  const setAlertMessage = msg => {\n    setAlert({\n      msg\n    });\n    setTimeout(() => setAlert(null), 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, \"WorldWeather\"), /*#__PURE__*/React.createElement(Form, {\n    searchUser: searchUser,\n    setAlert: setAlertMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Layout, {\n    weatherData: weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  })));\n};\n\nGetWeather.propType = {\n  searchUser: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js"],"names":["React","Fragment","useState","axios","Layout","Form","PropTypes","Alert","GetWeather","weatherData","setWeatherData","alert","setAlert","searchUser","text","res","get","data","weatherDisplay","error","result","name","country","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","id","weather","speed","deg","wind","toFixed","icon","getWeatherIcon","rangeId","setAlertMessage","msg","setTimeout","propType","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nconst GetWeather = () => {\n\tconst [weatherData, setWeatherData] = useState({});\n\n\tconst [alert, setAlert] = useState(null);\n\n\t// useEffect(async () => {\n\t// \tconst city = 'Boston';\n\t// \tconst res = await axios.get(\n\t// \t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t// \t);\n\t// \tsetWeatherData(res.data);\n\n\t// \tweatherDisplay(res.data);\n\t// \t//eslint-disabled-next-line\n\t// }, []);\n\n\tconst searchUser = async (text) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\n\t\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t\t);\n\t\t\tsetWeatherData(res.data);\n\t\t\tweatherDisplay(res.data);\n\t\t} catch (error) {\n\t\t\tif (error) {\n\t\t\t\tsetAlert('City not on WorldWeather list');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst weatherDisplay = (result) => {\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tsetWeatherData({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tid,\n\t\t\t\tdescription,\n\t\t\t\ttemp: temp.toFixed(0),\n\t\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t\ticon: getWeatherIcon(id),\n\t\t\t},\n\t\t});\n\t\tgetWeatherIcon(id);\n\t};\n\n\tconst getWeatherIcon = (rangeId) => {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\treturn 'wi-thunderstorm';\n\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\treturn 'wi-sleet';\n\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\treturn 'wi-storm-showers';\n\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\treturn 'wi-snow';\n\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\treturn 'wi-fog';\n\n\t\t\tcase rangeId === 800:\n\t\t\t\treturn 'wi-day-sunny';\n\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\treturn 'wi-day-fog';\n\n\t\t\tdefault:\n\t\t\t\treturn 'wi-day-fog';\n\t\t}\n\t};\n\n\t//set alert\n\tconst setAlertMessage = (msg) => {\n\t\tsetAlert({ msg });\n\t\tsetTimeout(() => setAlert(null), 2000);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='App'>\n\t\t\t\t<h2>WorldWeather</h2>\n\t\t\t\t<Form searchUser={searchUser} setAlert={setAlertMessage} />\n\t\t\t\t<Alert alert={alert} />\n\t\t\t\t<Layout weatherData={weatherData} />\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nGetWeather.propType = {\n\tsearchUser: PropTypes.func.isRequired,\n\tsetAlert: PropTypes.func.isRequired,\n};\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}