{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weather: {},\n      loading: false\n    };\n  }\n\n  //the temp needs to be in celcuis and the api file is in kelvin, thus the calculation needs to be done\n  calculateCel(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  } //getting info from weather api\n\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"WorldWeather\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, this.state.city))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/src/App.js"],"names":["React","Component","Fragment","axios","App","state","weather","loading","calculateCel","temp","cel","Math","floor","componentDidMount","setState","response","get","render","city"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACPC,MAAAA,OAAO,EAAE,EADF;AAEPC,MAAAA,OAAO,EAAE;AAFF,KADmB;AAAA;;AAM3B;AACAC,EAAAA,YAAY,CAACC,IAAD,EAAO;AAClB,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,MAAlB,CAAV;AACA,WAAOC,GAAP;AACA,GAV0B,CAY3B;;;AACA,QAAMG,iBAAN,GAA0B;AACzB,SAAKC,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACrB,gGADqB,CAAvB;AAGA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,KAAL,CAAWa,IAAhB,CAFD,CADD,CADD,CADD;AAUA;;AA/B0B;;AAkC5B,eAAed,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport axios from 'axios';\n\nclass App extends Component {\n\tstate = {\n\t\tweather: {},\n\t\tloading: false,\n\t};\n\n\t//the temp needs to be in celcuis and the api file is in kelvin, thus the calculation needs to be done\n\tcalculateCel(temp) {\n\t\tlet cel = Math.floor(temp - 273.15);\n\t\treturn cel;\n\t}\n\n\t//getting info from weather api\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst response = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=boston&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<h1>WorldWeather</h1>\n\t\t\t\t\t\t<h2>{this.state.city}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}