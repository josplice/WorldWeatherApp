{"ast":null,"code":"var _jsxFileName = \"/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nconst GetWeather = () => {\n  const [weatherData, setWeatherData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const weatherIcon = {\n    Thunderstorm: 'wi-thunderstorm',\n    Dizzle: 'wi-sleet',\n    Rain: 'wi-storm-showers',\n    Snow: 'wi-snow',\n    Atmosphere: 'wi-fog',\n    Clear: 'wi-day-sunny',\n    Clouds: 'wi-day-fog'\n  };\n  useEffect(async () => {\n    const city = 'Boston';\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`);\n    setWeatherData(res.data);\n    weatherDisplay(res.data); //eslint-disabled-next-line\n  }, []);\n\n  const searchUser = async text => {\n    try {\n      const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`);\n      const result = res.data;\n      console.log(result);\n      this.weatherDisplay(result);\n    } catch (error) {\n      if (error) {\n        this.setAlert('City not on WorldWeather list');\n      }\n    }\n  };\n\n  weatherDisplay = result => {\n    const {\n      name\n    } = result;\n    const {\n      country\n    } = result.sys;\n    const {\n      lat,\n      lon\n    } = result.coord;\n    const {\n      temp,\n      temp_min,\n      temp_max,\n      feels_like,\n      humidity,\n      pressure\n    } = result.main;\n    const {\n      description,\n      id\n    } = result.weather[0];\n    const {\n      speed,\n      deg\n    } = result.wind;\n    this.setState({\n      weatherData: {\n        name,\n        country,\n        id,\n        description,\n        temp: temp.toFixed(0),\n        feels_like: feels_like.toFixed(0),\n        temp_min: temp_min.toFixed(0),\n        temp_max: temp_max.toFixed(0),\n        speed,\n        deg,\n        humidity,\n        pressure,\n        lat: lat.toFixed(1),\n        lon: lon.toFixed(1),\n        icon: this.getWeatherIcon(id)\n      }\n    });\n    this.getWeatherIcon(id);\n  };\n\n  const getWeatherIcon = rangeId => {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        return 'wi-thunderstorm';\n\n      case rangeId >= 300 && rangeId <= 321:\n        return 'wi-sleet';\n\n      case rangeId >= 500 && rangeId <= 531:\n        return 'wi-storm-showers';\n\n      case rangeId >= 600 && rangeId <= 622:\n        return 'wi-snow';\n\n      case rangeId >= 701 && rangeId <= 781:\n        return 'wi-fog';\n\n      case rangeId === 800:\n        return 'wi-day-sunny';\n\n      case rangeId >= 801 && rangeId <= 804:\n        return 'wi-day-fog';\n\n      default:\n        return 'wi-day-fog';\n    }\n  }; //set alert\n\n\n  setAlert = msg => {\n    this.setState({\n      alert: {\n        msg\n      }\n    });\n    setTimeout(() => this.setState({\n      alert: null\n    }), 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, \"WorldWeather\"), /*#__PURE__*/React.createElement(Form, {\n    searchUser: this.searchUser,\n    setAlert: this.setAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: this.state.alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Layout, {\n    weatherData: this.state.weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  })));\n};\n\nGetWeather.propType = {\n  searchUser: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default GetWeather;","map":{"version":3,"sources":["/Users/jospiesimac/Desktop/8. Web develoement/udemy-traversy/react weatherApp/weather-app/client/src/components/GetWeather.js"],"names":["React","Fragment","useState","useEffect","axios","Layout","Form","PropTypes","Alert","GetWeather","weatherData","setWeatherData","loading","setLoading","alert","setAlert","weatherIcon","Thunderstorm","Dizzle","Rain","Snow","Atmosphere","Clear","Clouds","city","res","get","data","weatherDisplay","searchUser","text","result","console","log","error","name","country","sys","lat","lon","coord","temp","temp_min","temp_max","feels_like","humidity","pressure","main","description","id","weather","speed","deg","wind","setState","toFixed","icon","getWeatherIcon","rangeId","msg","setTimeout","state","propType","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nconst GetWeather = () => {\n\tconst [weatherData, setWeatherData] = useState({});\n\tconst [loading, setLoading] = useState(false);\n\tconst [alert, setAlert] = useState(null);\n\n\tconst weatherIcon = {\n\t\tThunderstorm: 'wi-thunderstorm',\n\t\tDizzle: 'wi-sleet',\n\t\tRain: 'wi-storm-showers',\n\t\tSnow: 'wi-snow',\n\t\tAtmosphere: 'wi-fog',\n\t\tClear: 'wi-day-sunny',\n\t\tClouds: 'wi-day-fog',\n\t};\n\n\tuseEffect(async () => {\n\t\tconst city = 'Boston';\n\t\tconst res = await axios.get(\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t);\n\t\tsetWeatherData(res.data);\n\t\tweatherDisplay(res.data);\n\t\t//eslint-disabled-next-line\n\t}, []);\n\n\tconst searchUser = async (text) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\n\t\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t\t);\n\t\t\tconst result = res.data;\n\t\t\tconsole.log(result);\n\n\t\t\tthis.weatherDisplay(result);\n\t\t} catch (error) {\n\t\t\tif (error) {\n\t\t\t\tthis.setAlert('City not on WorldWeather list');\n\t\t\t}\n\t\t}\n\t};\n\n\tweatherDisplay = (result) => {\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tthis.setState({\n\t\t\tweatherData: {\n\t\t\t\tname,\n\t\t\t\tcountry,\n\t\t\t\tid,\n\t\t\t\tdescription,\n\t\t\t\ttemp: temp.toFixed(0),\n\t\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\t\tspeed,\n\t\t\t\tdeg,\n\t\t\t\thumidity,\n\t\t\t\tpressure,\n\t\t\t\tlat: lat.toFixed(1),\n\t\t\t\tlon: lon.toFixed(1),\n\t\t\t\ticon: this.getWeatherIcon(id),\n\t\t\t},\n\t\t});\n\t\tthis.getWeatherIcon(id);\n\t};\n\n\tconst getWeatherIcon = (rangeId) => {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\treturn 'wi-thunderstorm';\n\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\treturn 'wi-sleet';\n\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\treturn 'wi-storm-showers';\n\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\treturn 'wi-snow';\n\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\treturn 'wi-fog';\n\n\t\t\tcase rangeId === 800:\n\t\t\t\treturn 'wi-day-sunny';\n\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\treturn 'wi-day-fog';\n\n\t\t\tdefault:\n\t\t\t\treturn 'wi-day-fog';\n\t\t}\n\t};\n\n\t//set alert\n\tsetAlert = (msg) => {\n\t\tthis.setState({ alert: { msg } });\n\t\tsetTimeout(() => this.setState({ alert: null }), 2000);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='App'>\n\t\t\t\t<h2>WorldWeather</h2>\n\t\t\t\t<Form searchUser={this.searchUser} setAlert={this.setAlert} />\n\t\t\t\t<Alert alert={this.state.alert} />\n\t\t\t\t<Layout weatherData={this.state.weatherData} />\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nGetWeather.propType = {\n\tsearchUser: PropTypes.func.isRequired,\n\tsetAlert: PropTypes.func.isRequired,\n};\n\nexport default GetWeather;\n"]},"metadata":{},"sourceType":"module"}