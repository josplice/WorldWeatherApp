{"version":3,"sources":["components/Layout.js","components/Form.js","components/Alert.js","components/GetWeather.js","App.js","index.js"],"names":["Layout","weatherData","name","country","description","temp","feels_like","temp_max","temp_min","speed","deg","humidity","pressure","lat","lon","icon","className","containerStyle","textAlign","marginTop","maxWidth","Form","setAlertMessage","searchUser","useState","text","setText","style","onSubmit","e","preventDefault","type","placeholder","aria-label","aria-describedby","onChange","target","value","margin","Alert","alert","msg","GetWeather","setWeatherData","setAlert","useEffect","a","axios","get","res","weatherDisplay","data","dataRetrieve","result","sys","coord","main","weather","id","wind","toFixed","getWeatherIcon","rangeId","setTimeout","propType","PropTypes","func","isRequired","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bcaf5e9.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport PropTypes from 'prop-types';\n\nconst Layout = (weatherData) => {\n\tconst {\n\t\tname,\n\t\tcountry,\n\t\tdescription,\n\t\ttemp,\n\t\tfeels_like,\n\t\ttemp_max,\n\t\ttemp_min,\n\t\tspeed,\n\t\tdeg,\n\t\thumidity,\n\t\tpressure,\n\t\tlat,\n\t\tlon,\n\t\ticon,\n\t} = weatherData.weatherData;\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h3 className='py-2'>{`${name} , ${country}`}</h3>\n\t\t\t\t\t<i className={`wi ${icon} display-2 py-2`}></i>\n\t\t\t\t\t<h3 className='py-3'>{description}</h3>\n\t\t\t\t\t<h1>{`${temp}`}&deg;C</h1>\n\t\t\t\t\t<h4>{`${temp_min} | ${temp_max}`}</h4>\n\t\t\t\t\t<h6>{`Feels like: ${feels_like}`}&deg;C</h6>\n\t\t\t\t\t<h6>{`Wind: ${speed}m/s ${deg}`}&deg;</h6>\n\t\t\t\t\t<h6>{`Humidity: ${humidity}`}%</h6>\n\t\t\t\t\t<h6>{`Pressure: ${pressure} `}hPa</h6>\n\t\t\t\t\t<h6>\n\t\t\t\t\t\t{`Lat: ${lat}`}&deg;{` | Lon: ${lon}`}&deg;\n\t\t\t\t\t</h6>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nLayout.propTypes = {\n\tweatherData: PropTypes.object.isRequired,\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ setAlertMessage, searchUser }) => {\n\tconst [text, setText] = useState('');\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (text === '') {\n\t\t\tsetAlertMessage('Please enter a city');\n\t\t} else {\n\t\t\tsearchUser(text);\n\t\t\tsetText('');\n\t\t}\n\t};\n\n\tconst onChange = (e) => {\n\t\tsetText(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className='container' style={containerStyle}>\n\t\t\t<form onSubmit={onSubmit} className='form'>\n\t\t\t\t<div className='input-group mb-2'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tplaceholder='Enter City...'\n\t\t\t\t\t\taria-label=\"Recipient's username\"\n\t\t\t\t\t\taria-describedby='basic-addon2'\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tclassName='btn btn-outline-secondary input-group-append'\n\t\t\t\t\t>\n\t\t\t\t\t\tFind\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst containerStyle = {\n\ttextAlign: 'center',\n\tmarginTop: '20px',\n\tmaxWidth: '250px',\n};\n\nForm.propTypes = {\n\tsearchUser: PropTypes.func.isRequired,\n\tsetAlertMessage: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\n\nconst Alert = ({ alert }) => {\n\treturn (\n\t\talert !== null && (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t<h6>{alert.msg}</h6>\n\t\t\t</div>\n\t\t)\n\t);\n};\nconst containerStyle = {\n\ttextAlign: 'center',\n\tmargin: 'auto 0',\n};\n\nexport default Alert;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport 'weather-icons/css/weather-icons.css';\nimport axios from 'axios';\nimport Layout from './Layout';\nimport Form from './Form';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\n\nconst GetWeather = () => {\n\tconst [weatherData, setWeatherData] = useState({});\n\n\tconst [alert, setAlert] = useState(null);\n\n\tuseEffect(() => {\n\t\tasync function dataRetrieve() {\n\t\t\tconst city = 'Boston';\n\t\t\tconst res = await axios.get(\n\t\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t\t);\n\n\t\t\tweatherDisplay(res.data);\n\t\t}\n\t\tdataRetrieve();\n\t\t//eslint-disable-next-line\n\t}, []);\n\n\tconst searchUser = async (text) => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\n\t\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=e9629992d0bde86eaddc6391f50171b7`,\n\t\t\t);\n\n\t\t\tweatherDisplay(res.data);\n\t\t} catch (error) {\n\t\t\tif (error) {\n\t\t\t\tsetAlertMessage('City not on WorldWeather list');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst weatherDisplay = (result) => {\n\t\tconst { name } = result;\n\t\tconst { country } = result.sys;\n\t\tconst { lat, lon } = result.coord;\n\t\tconst {\n\t\t\ttemp,\n\t\t\ttemp_min,\n\t\t\ttemp_max,\n\t\t\tfeels_like,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t} = result.main;\n\t\tconst { description, id } = result.weather[0];\n\t\tconst { speed, deg } = result.wind;\n\n\t\tsetWeatherData({\n\t\t\tname,\n\t\t\tcountry,\n\t\t\tid,\n\t\t\tdescription,\n\t\t\ttemp: temp.toFixed(0),\n\t\t\tfeels_like: feels_like.toFixed(0),\n\t\t\ttemp_min: temp_min.toFixed(0),\n\t\t\ttemp_max: temp_max.toFixed(0),\n\t\t\tspeed,\n\t\t\tdeg,\n\t\t\thumidity,\n\t\t\tpressure,\n\t\t\tlat: lat.toFixed(1),\n\t\t\tlon: lon.toFixed(1),\n\t\t\ticon: getWeatherIcon(id),\n\t\t});\n\t\tgetWeatherIcon(id);\n\t};\n\n\tconst getWeatherIcon = (rangeId) => {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\treturn 'wi-thunderstorm';\n\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\treturn 'wi-sleet';\n\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\treturn 'wi-storm-showers';\n\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\treturn 'wi-snow';\n\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\treturn 'wi-fog';\n\n\t\t\tcase rangeId === 800:\n\t\t\t\treturn 'wi-day-sunny';\n\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\treturn 'wi-day-fog';\n\n\t\t\tdefault:\n\t\t\t\treturn 'wi-day-fog';\n\t\t}\n\t};\n\n\t//set alert\n\tconst setAlertMessage = (msg) => {\n\t\tsetAlert({ msg });\n\t\tsetTimeout(() => setAlert(null), 2000);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='App'>\n\t\t\t\t<h2>WorldWeather</h2>\n\t\t\t\t<Form searchUser={searchUser} setAlertMessage={setAlertMessage} />\n\t\t\t\t<Alert alert={alert} />\n\t\t\t\t<Layout weatherData={weatherData} />\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nGetWeather.propType = {\n\tsearchUser: PropTypes.func.isRequired,\n\tsetAlert: PropTypes.func.isRequired,\n};\n\nexport default GetWeather;\n","import React, { Component, Fragment } from 'react';\n\nimport GetWeather from './components/GetWeather';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className='App'>\n\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<GetWeather />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}